name: service-echo-test
on:
  pull_request:
    paths:
      - 'svc/echo/**'
      - '.github/workflows/svc.echo-test.yml'
  push:
    paths:
      - 'svc/echo/**'
      - 'toolkit/**'
      - 'Makefile.go.mk'
      - '.github/workflows/svc.echo-test.yml'

env:
  workdir: 'svc/echo'
  go-version: '1.16'
defaults:
  run:
    shell: bash
jobs:
  linter:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: golangci/golangci-lint-action@v2
        with:
          working-directory: '${{ env.workdir }}'
          args: '--config "${GITHUB_WORKSPACE}/ci/golangci.yml"'
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '${{ env.goversion }}'
      - run: make test-unit
        working-directory: '${{ env.workdir }}'
  integration-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '${{ env.goversion }}'
      - run: make test-integration
        working-directory: '${{ env.workdir }}'
  build:
    runs-on: ubuntu-latest
    needs: [ 'linter', 'unit-tests', 'integration-tests' ]
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v2
      - id: 'pr-number-extractor'
        uses: ./.github/derive-pr-number
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build image
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: false # mocked
          tags: 'svc/echo:PR-${{ steps.pr-number-extractor.outputs.pr_num }}'